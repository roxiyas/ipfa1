{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/icon\";\n\nfunction LoginComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.getErrorMessage(\"username\"), \" \");\n  }\n}\n\nfunction LoginComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.getErrorMessage(\"password\"), \" \");\n  }\n}\n\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(authSvc, fb, router, toastr) {\n      this.authSvc = authSvc;\n      this.fb = fb;\n      this.router = router;\n      this.toastr = toastr;\n      this.hide = true; //ojito\n\n      this.isValidEmail = /\\S+@\\S+\\.\\S+/;\n      this.subscription = new Subscription(); //aca pasa algo\n\n      this.loginForm = this.fb.group({\n        username: ['', [Validators.required, Validators.pattern(this.isValidEmail)]],\n        password: ['', [Validators.required, Validators.minLength(5)]]\n      });\n    }\n\n    ngOnInit() {// const userData={\n      // username:'malo@gmail.com',\n      //password:'987654321',\n      //};\n      // this.authSvc.login(userData).subscribe((res)=> console.log('login'));\n    }\n\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n    }\n\n    onLogin() {\n      if (this.loginForm.invalid) {\n        return;\n      }\n\n      const formValue = this.loginForm.value;\n      this.subscription.add(this.authSvc.login(formValue).subscribe(res => {\n        if (res) {\n          this.router.navigate(['/home']);\n        }\n      }));\n    }\n\n    getErrorMessage(field) {\n      var _a;\n\n      let message;\n\n      if (this.loginForm.get(field).errors.required) {\n        message = 'campo requerido';\n      } else if (this.loginForm.get(field).hasError('pattern')) {\n        message = 'Correo no valido ';\n      } else if (this.loginForm.get(field).hasError('minlength')) {\n        const minLength = (_a = this.loginForm.get(field).errors) === null || _a === void 0 ? void 0 : _a.minlength.requiredLength;\n        message = `debe tener minimo  ${minLength} caracteres`;\n      }\n\n      return message;\n    }\n\n    isValidField(field) {\n      return (this.loginForm.get(field).touched || this.loginForm.get(field).dirty) && !this.loginForm.get(field).valid;\n    }\n\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService));\n  };\n\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 20,\n    vars: 6,\n    consts: [[1, \"login-form\"], [\"src\", \"../../../../assets/img/img.png\", \"width\", \"40%\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"full-width-input\"], [\"text\", \"text\", \"formControlName\", \"username\", \"matInput\", \"\", \"placeholder\", \"Correo Electronico\", \"required\", \"\"], [4, \"ngIf\"], [1, \"full-width-input\", \"separator\"], [\"formControlName\", \"password\", \"matInput\", \"\", \"placeholder\", \"Contrase\\u00F1a\", \"required\", \"\", 3, \"type\"], [\"mat-icon-button\", \"\", \"matSuffix\", \"\", 3, \"click\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\"], [\"mat-button\", \"\", \"routerLink\", \"/registro\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-card\");\n        i0.ɵɵelement(2, \"img\", 1);\n        i0.ɵɵelementStart(3, \"mat-card-content\");\n        i0.ɵɵelementStart(4, \"h1\");\n        i0.ɵɵtext(5, \"IPSFA EN L\\u00EDNEA\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.onLogin();\n        });\n        i0.ɵɵelementStart(7, \"mat-form-field\", 3);\n        i0.ɵɵelement(8, \"input\", 4);\n        i0.ɵɵtemplate(9, LoginComponent_mat_error_9_Template, 2, 1, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-form-field\", 6);\n        i0.ɵɵelement(11, \"input\", 7);\n        i0.ɵɵelementStart(12, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_12_listener() {\n          return ctx.hide = !ctx.hide;\n        });\n        i0.ɵɵelementStart(13, \"mat-icon\");\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, LoginComponent_mat_error_15_Template, 2, 1, \"mat-error\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"button\", 9);\n        i0.ɵɵtext(17, \"Ingresar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"a\", 10);\n        i0.ɵɵtext(19, \"Registrarse\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.isValidField(\"username\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"type\", ctx.hide ? \"password\" : \"text\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.hide ? \"visibility_off\" : \"visibility\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isValidField(\"password\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      }\n    },\n    directives: [i5.MatCard, i5.MatCardContent, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i6.MatFormField, i2.DefaultValueAccessor, i7.MatInput, i2.NgControlStatus, i2.FormControlName, i2.RequiredValidator, i8.NgIf, i9.MatButton, i6.MatSuffix, i10.MatIcon, i9.MatAnchor, i3.RouterLinkWithHref, i6.MatError],\n    styles: [\".login-form[_ngcontent-%COMP%]{padding:4rem 1rem}.login-form[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]{max-width:300px;margin:2rem auto;text-align:center;height:400px}.login-form[_ngcontent-%COMP%]   .full-width-input[_ngcontent-%COMP%], .login-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%}.login-form[_ngcontent-%COMP%]   .separator[_ngcontent-%COMP%]{margin-bottom:2rem}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}