{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/users/users.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"@angular/material/button\";\nexport let RegistroComponent = /*#__PURE__*/(() => {\n  class RegistroComponent {\n    constructor(userService, http, fb, toastr) {\n      this.userService = userService;\n      this.http = http;\n      this.fb = fb;\n      this.toastr = toastr;\n      this.isValidEmail = /\\S+@\\S+\\.\\S+/; // private subscription: Subscription = new Subscription(); //aca pasa algo\n\n      this.registroForm = this.fb.group({\n        cedula: ['', [Validators.required, Validators.minLength(6)]],\n        username: ['', [Validators.required, Validators.pattern(this.isValidEmail)]],\n        password: ['', [Validators.required, Validators.minLength(5)]],\n        componente: ['', [Validators.required]],\n        Date: ['', [Validators.required]]\n      });\n      this.role = \"admin\";\n      this.cedulafamiliar = \"0\";\n      this.allData = [];\n      this.fechaIng = [];\n      this.Date = new Date().toISOString().slice(0, 0); //esto es la fecha\n    } ///se guarda el militar correo y clave\n\n\n    getPostDataConceptos() {\n      let url = \"https://app.ipsfa.gob.ve/ipsfa/api/web/militar/\" + this.cedula;\n      return this.http.get(url);\n    }\n\n    register() {\n      this.getPostDataConceptos().subscribe(data => {\n        let g = data;\n        let obj = Object.values(g); //recorrer un objeto\n\n        let respuesta = obj[0];\n\n        if (respuesta != '') {\n          //let compR=data.Componente\n          this.allData = data;\n          let fecha = this.allData.fingreso;\n          let ISODateIng = new Date(fecha).toISOString();\n          let feIng = ISODateIng.substr(0, 10);\n          let faIng = feIng.split(\"-\");\n\n          if (faIng[0] != \"0001\") {\n            this.fechaIng = faIng[0] + \"-\" + faIng[1] + \"-\" + faIng[2]; //trasforma la fecha\n          } else {\n            this.fechaIng = '';\n          }\n\n          let compo = this.allData.Componente.abreviatura; //componente\n\n          if (compo == this.componente) {\n            if (this.Date == this.fechaIng) {\n              const user = {\n                username: this.username,\n                password: this.password,\n                cedula: this.cedula,\n                role: this.role,\n                cedulafamiliar: this.cedulafamiliar\n              };\n              this.userService.register(user).subscribe(data => {});\n              this.toastr.success('Usuario Guardado', 'Alerta'); //window.location.reload ();     \n\n              setTimeout('document.location.reload()', 1000);\n            } else {\n              this.toastr.warning('Fecha Incorrecta', 'Alerta'); ///console.log('no es fecha');\n            }\n          } else {\n            this.toastr.warning('No es componente', 'Alerta');\n          }\n        } else {\n          this.toastr.warning('Cedula no Existe', 'Alerta'); //console.log('Cedula no Existe');\n        }\n      });\n    }\n\n    getErrorMessage(field) {\n      var _a;\n\n      let message;\n\n      if (this.registroForm.get(field).errors.required) {\n        message = 'campo requerido';\n      } else if (this.registroForm.get(field).hasError('pattern')) {\n        message = 'Correo no valido ';\n      } else if (this.registroForm.get(field).hasError('minlength')) {\n        const minLength = (_a = this.registroForm.get(field).errors) === null || _a === void 0 ? void 0 : _a.minlength.requiredLength;\n        message = `debe tener minimo  ${minLength} caracteres`;\n      }\n\n      return message;\n    }\n\n    isValidField(field) {\n      return (this.registroForm.get(field).touched || this.registroForm.get(field).dirty) && !this.registroForm.get(field).valid;\n    }\n\n  }\n\n  RegistroComponent.ɵfac = function RegistroComponent_Factory(t) {\n    return new (t || RegistroComponent)(i0.ɵɵdirectiveInject(i1.UsersService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.ToastrService));\n  };\n\n  RegistroComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegistroComponent,\n    selectors: [[\"app-registro\"]],\n    decls: 31,\n    vars: 8,\n    consts: [[1, \"registro-form\", \"img\"], [\"src\", \"../../../../assets/img/img.png\", \"width\", \"40%\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"full-width-input\"], [\"text\", \"text\", \"formControlName\", \"cedula\", \"matInput\", \"\", \"placeholder\", \"Cedula Titular\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"formControlName\", \"componente\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"EJ\"], [\"value\", \"AR\"], [\"value\", \"AV\"], [\"value\", \"GN\"], [2, \"text-align\", \"left\"], [\"type\", \"date\", \"formControlName\", \"Date\", \"id\", \"checkindate\", 1, \"full-width-input\", 3, \"ngModel\", \"min\", \"ngModelChange\"], [\"text\", \"text\", \"formControlName\", \"username\", \"matInput\", \"\", \"placeholder\", \"Correo Electronico\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"full-width-input\", \"separator\"], [\"type\", \"password\", \"formControlName\", \"password\", \"matInput\", \"\", \"placeholder\", \"Password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", \"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"disabled\"]],\n    template: function RegistroComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-card\");\n        i0.ɵɵelement(2, \"img\", 1);\n        i0.ɵɵelementStart(3, \"mat-card-content\");\n        i0.ɵɵelementStart(4, \"h1\");\n        i0.ɵɵtext(5, \"Registro IPSFA \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function RegistroComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.register();\n        });\n        i0.ɵɵelementStart(7, \"mat-form-field\", 3);\n        i0.ɵɵelementStart(8, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function RegistroComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.cedula = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"mat-form-field\", 3);\n        i0.ɵɵelementStart(10, \"mat-label\");\n        i0.ɵɵtext(11, \"Seleccionar su Componente \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"mat-select\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function RegistroComponent_Template_mat_select_ngModelChange_12_listener($event) {\n          return ctx.componente = $event;\n        });\n        i0.ɵɵelementStart(13, \"mat-option\", 6);\n        i0.ɵɵtext(14, \"Ejercito Bolivariana\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mat-option\", 7);\n        i0.ɵɵtext(16, \"Armada Bolivariana\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-option\", 8);\n        i0.ɵɵtext(18, \"Aviaci\\u00F2n Nacional\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mat-option\", 9);\n        i0.ɵɵtext(20, \"Guardia Nacional\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 10);\n        i0.ɵɵelementStart(22, \"h5\");\n        i0.ɵɵtext(23, \" Ingrese la Fecha de Ingreso a la FANB\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function RegistroComponent_Template_input_ngModelChange_24_listener($event) {\n          return ctx.Date = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"mat-form-field\", 3);\n        i0.ɵɵelementStart(26, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function RegistroComponent_Template_input_ngModelChange_26_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"mat-form-field\", 13);\n        i0.ɵɵelementStart(28, \"input\", 14);\n        i0.ɵɵlistener(\"ngModelChange\", function RegistroComponent_Template_input_ngModelChange_28_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"button\", 15);\n        i0.ɵɵtext(30, \"Crear\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.registroForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.cedula);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.componente);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngModel\", ctx.Date)(\"min\", ctx.Date);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.registroForm.invalid);\n      }\n    },\n    directives: [i5.MatCard, i5.MatCardContent, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i6.MatFormField, i3.DefaultValueAccessor, i7.MatInput, i3.NgControlStatus, i3.FormControlName, i3.RequiredValidator, i6.MatLabel, i8.MatSelect, i9.MatOption, i10.MatButton],\n    styles: [\".registro-form[_ngcontent-%COMP%]{padding:4rem 1rem}.registro-form[_ngcontent-%COMP%]   mat-card[_ngcontent-%COMP%]{max-width:400px;margin:2rem auto;text-align:center;height:570px}.registro-form[_ngcontent-%COMP%]   .full-width-input[_ngcontent-%COMP%], .registro-form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%}.registro-form[_ngcontent-%COMP%]   .separator[_ngcontent-%COMP%]{margin-bottom:2rem}.img[_ngcontent-%COMP%]{background-image:url(fondo.96e17a33bfeab43ca760.jpeg);background-repeat:no-repeat}\"]\n  });\n  return RegistroComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}